[{"name":"app.R","content":"library(shiny)\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"The Normal Distribution\"),\n    tags$style(HTML(\".js-irs-0 .irs-single, .js-irs-0 .irs-bar-edge, .js-irs-0 .irs-bar {background: #4CA384}\")),\n    tags$style(HTML(\".js-irs-1 .irs-single, .js-irs-1 .irs-bar-edge, .js-irs-1 .irs-bar {background: #4CA384}\")),\n    \n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"mean\",\n                        \"Value of Mean:\",\n                        min = -10,\n                        max = 10,\n                        value = 0),\n            sliderInput('sd',\n                        'Value of Standard Deviation:',\n                        min = .5,\n                        max = 15,\n                        value = .5,\n                        step = .5)\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           plotOutput('distPlot')\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output) {\n\n    output$distPlot <- renderPlot({\n      dat <- data.frame(X=rnorm(300, mean = input$mean, sd = input$sd))\n      \n      ggplot(data.frame(X = c(-60, 60)), aes(x = X)) +\n        geom_histogram(data=dat, aes(x=X, y = ..density..), fill = '#4CA384', color = '#19424C') +\n        stat_function(fun=dnorm, geom = \"line\", args = list(mean = input$mean, sd = input$sd), \n                      linewidth = 1, color = '#19424C') + \n        theme(axis.title.x = element_text(size = 16, face = 'bold'),\n              axis.text.x = element_text(size = 16),\n              axis.line.y = element_blank(),\n              axis.text.y = element_blank(),\n              axis.ticks = element_blank(),\n              axis.title.y = element_blank())\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"}]
