dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
describe()
dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
describe() %>%
select('vars', 'mean', 'median')
descDat <- dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
describe() %>%
select('vars', 'mean', 'median')
descDat$vars <- c('O', 'C', 'E', 'A', 'N')
View(descDat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(xintercept = descDat$mean)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data = descDat, mapping = aes(xintercept = mean))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data = descDat, mapping = aes(xintercept = mean, group=vars))
testDat <- dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather()
View(testDat)
descDat <- dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
gather() %>%
group_by(key) %>%
describe()
View(descDat)
dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
gather() %>%
group_by(key) %>%
mutate(medDat = median(value),
meanDat = mean(value))
dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
gather() %>%
group_by(key) %>%
mutate(medDat = median(value),
meanDat = mean(value)) %>%
ggplot(aes(value)) +
geom_histogram(binwidth = 100) +
geom_vline(aes(xintercept= medDat), colour='red') +
facet_wrap(~ key, scales = "free_y")
dat <- dat %>%
select('O', 'C', 'E', 'A', 'N') %>%
gather() %>%
group_by(key) %>%
mutate(medDat = median(value),
meanDat = mean(value))
View(dat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(xintercept = medDat)
View(dat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(xintercept = mean(medDat))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(xintercept = medDat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=dat %>% group_by(key), xintercept = medDat)
View(dat)
dat <- read.csv('https://uoepsy.github.io/data/FOMOdataset.csv')
View(dat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=dat %>% group_by(key), xintercept = medDat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=dat %>% group_by(key), aes(xintercept = medDat))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=. %>% group_by(key), aes(xintercept = medDat))
.%>% group_by(key)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=.%>% group_by(key), aes(xintercept = medDat))
geom_vline(data =., mapping = aes(xintercept = mean, group=key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=group_by(key, .), aes(xintercept = medDat))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=group_by(key), aes(xintercept = medDat))
View(dat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) %>%
geom_vline(data=group_by(key), aes(xintercept = median(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=group_by(key), mapping=aes(xintercept = median(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=group_by(dat$key), mapping=aes(xintercept = median(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=group_by(.$key), mapping=aes(xintercept = median(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=.%>%group_by(key), mapping=aes(xintercept = median(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(data=.%>%group_by(key), mapping=aes(xintercept = mean(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept=mean(value)))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept=mean(value), group=key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept=mean(value), group_by=key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)
plot1 <- dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)
.%>%group_by(key)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(data=.%>%group_by(key), mapping=aes(xintercept = mean(value), group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(data=., mapping=aes(xintercept = mean(value), group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = mean(value), group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
mutate(meanDat = mean(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = meanDat, group = key))
mutate(meanDat = mean(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = meanDat, group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = meanDat, group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = meanDat, group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key)+
geom_vline(mapping=aes(xintercept = meanDat, group = key))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept = meanDat))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(xintercept = meanDat)
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept = meanDat))
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept = meanDat), colour = 'red')
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept = meanDat), colour = 'red') +
geom_vline(mapping=aes(xintercept = medDat), colour = 'green')
# MTH edits
dat %>%
select(c('O', 'C', 'E', 'A', 'N')) %>%
gather() %>%
group_by(key) %>%
mutate(meanDat = mean(value),
medDat = median(value)) %>%
ggplot(., aes(value)) +
geom_histogram(aes(y=..density..), bins = 25, fill='steelblue', colour='black') +
facet_wrap(~key) +
geom_vline(mapping=aes(xintercept = meanDat), colour = 'red') +
geom_vline(mapping=aes(xintercept = medDat), colour = 'green')
sqrt(.01)
dat <- read.csv('../Desktop/UofE/Research/APIM/data_apim.csv')
# Here, I convert these variables to factors, as they're currently set as numeric:
dat$sex_1 <- as.factor(dat$sex_1)
dat$sex_2_pa <- as.factor(dat$sex_2_pa)
dat$yasingparnt18 <- as.factor(dat$yasingparnt18)
dat$dcat12 <- as.factor(dat$dcat12)
dat$dcat18 <- as.factor(dat$dcat18)
dat$dcat1812rev <- as.factor(dat$dcat1812rev)
summary(dat)
# Assign Key Variables (make sure variable names are in quotes)
adolescentOutcome <- 'CTSado_AllABofMom_1' # Adolescent Outcome Variable name
parentOutcome <- 'CTSmom_MomAllABofAdo_2' # Parent Outcome Variable name
adolescentPred <- 'odd_1' # Adolescent Predictor Variable name
parentPred <- 'odd_2' # Parent Predictor Variable name
mediator_ado <- 'mediato_1' #Adolescent Mediator variable
mediator_par <- 'mediator_2' #Parent Mediator variable
colnames(dat)
mean(3, 6, 2, 5, 7)
mean(3, 6, 4, 5, 8)
mean(c(3, 6, 2, 5, 7))
mean(c(3, 6, 2, 5, 7, 8))
mean(c(3, 6, 2, 5, 7, 7))
mcDat <- data.frame(x = c(3, 6, 7, 2, 5, 7))
mcDat$xMC <- mcDat$x - mean(mcDat$x)
mean(mcDat$x)
mcDat $>$
library(tidyverse)
mcDat %>%
kable() %>%
kableExtra(kable_styling())
mcDat %>%
kable() %>%
kable_styling()
library(kableExtra)
mcDat %>%
kable() %>%
kable_styling()
mcDat %>%
kable(col.names = c('x', 'Mean-centred X')) %>%
kable_styling()
mcDat <- data.frame(x = c(3, 6, 7, 2, 5, 7),
z = sample(1:10, size = 6, replace = T))
mcDat$xMC <- mcDat$x - mean(mcDat$x)
mcDat %>%
kable(col.names = c('x', 'Mean-centred X')) %>%
kable_styling()
View(mcDat)
set.seed(444)
mcDat <- data.frame(x = c(3, 6, 7, 2, 5, 7),
z = sample(1:10, size = 6, replace = T))
mcDat$xz = mcDat$x*mcDat$z
mcDat$xMC <- mcDat$x - mean(mcDat$x)
mcDat %>%
kable(col.names = c('x', 'Mean-centred X')) %>%
kable_styling()
mcDat %>%
kable(col.names = c('x', 'z', 'xz', 'Mean-centred X')) %>%
kable_styling()
set.seed(444)
mcDat <- data.frame(x = c(3, 6, 7, 2, 5, 7),
z = sample(1:10, size = 6, replace = T))
mcDat$xz = mcDat$x*mcDat$z
mcDat$xMC <- mcDat$x - mean(mcDat$x)
mcDat %>%
kable(col.names = c('x', 'z', 'xz', 'Mean-centred X')) %>%
kable_styling()
library(haven)
setwd('../Desktop/UofE/Teaching/PRM/PRMcontent/Labs/')
mydata <- read_sav('Week6LabData.sav')
summary(mydata)
mydata$ID <- 1:nrow(mydata)
#descriptive analysis
describe(mydata)
#define timepoint
data_long <- pivot_longer(mydata,
cols = c(CAPSBaseline, CAPSFollowUp),
names_to = "timepoint",
values_to = "CAPS")
library(dplyr)
#define timepoint
data_long <- pivot_longer(mydata,
cols = c(CAPSBaseline, CAPSFollowUp),
names_to = "timepoint",
values_to = "CAPS")
library(psych)
#define timepoint
data_long <- pivot_longer(mydata,
cols = c(CAPSBaseline, CAPSFollowUp),
names_to = "timepoint",
values_to = "CAPS")
library(car)
library(tidyr)
#define timepoint
data_long <- pivot_longer(mydata,
cols = c(CAPSBaseline, CAPSFollowUp),
names_to = "timepoint",
values_to = "CAPS")
data_long$timepoint <- ifelse(data_long$timepoint == "CAPSBaseline", "baseline", "followup")
summary(data_long)
View(data_long)
model <- aov(CAPS ~ TherapyGroup * timepoint, data = data_long)
summary(model)
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data = data_long)
summary(model)
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint*TherapyGroup), data = data_long)
summary(model)
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data = data_long)
summary(model)
View(data_long)
summary(data_long)
#two-way ANOVA
data_long$TherapyGroup <- as.factor(data_long$TherapyGroup)
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data = data_long)
summary(model)
summary(data_long)
data_long$timepoint <- as.factor(data_long$timepoint)
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data = data_long)
summary(model)
options(contrasts = c("contr.helmert", "contr.poly"))
options('contrasts')
model <- aov(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data = data_long)
summary(model)
mod2 <- lm(attractiveness~gender*alcohol,data=my.data)
Anova(mod2,type=3)
mod2 <- lm(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint),data=my_data)
mod2 <- lm(CAPS ~ TherapyGroup * timepoint + Error(ID/timepoint), data=data_long)
mod2 <- lm(CAPS ~ TherapyGroup * timepoint + (1+timepoint|ID), data=data_long)
Anova(mod2,type=3)
mod2 <- lm(CAPS ~ TherapyGroup * timepoint + (1|ID), data=data_long)
Anova(mod2,type=3)
mod2 <- lm(CAPS ~ TherapyGroup * timepoint + (timepoint|ID), data=data_long)
Anova(mod2,type=3)
alias( lm( y ~ x1 + x2 ) )
alias(lm(CAPS ~ TherapyGroup * timepoint))
alias(lm(CAPS ~ TherapyGroup * timepoint, data_long))
alias
alias(lm(CAPS ~ TherapyGroup * timepoint, data_long))
mod2 <- lm(CAPS ~ TherapyGroup * timepoint, data=data_long)
Anova(mod2,type=3)
library(rstatix)
View(mydata)
res.aov <- anova_test(data = data_long, dv = CAPS, wid = ID, within = timepoint, between = TherapyGroup)
get_anova_table(res.aov)
summary(res.aov)
res.aov
get_anova_table(res.aov)
sqrt(.15)
20/420
20/450
